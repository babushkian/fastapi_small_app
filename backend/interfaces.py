from typing import Protocol, Optional, List
from models import Student, Course

class StudentRepositoryInterface(Protocol):
    async def get(self, id: int) -> Optional[Student]: ...
    async def get_with_courses(self, id: int) -> Optional[Student]: ...
    async def get_by_name(self, name: str) -> Optional[Student]: ...
    async def list(self) -> List[Student]: ...
    async def add(self, student: Student) -> Student: ...
    async def remove(self, student: Student) -> None: ...

class CourseRepositoryInterface(Protocol):
    async def get(self, id: int) -> Optional[Course]: ...
    async def get_with_students(self, id: int) -> Optional[Course]: ...
    async def get_by_title(self, title: str) -> Optional[Course]: ...
    async def list(self) -> List[Course]: ...
    async def add(self, course: Course) -> Course: ...
    async def remove(self, course: Course) -> None: ...