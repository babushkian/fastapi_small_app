from typing import Protocol, Optional, List
import models

class StudentRepositoryInterface(Protocol):
    async def get(self, id: int) -> Optional[models.Student]: ...
    async def get_with_courses(self, id: int) -> Optional[models.Student]: ...
    async def get_by_name(self, name: str) -> Optional[models.Student]: ...
    async def list(self) -> List[models.Student]: ...
    async def add(self, student: models.Student) -> models.Student: ...
    async def remove(self, student: models.Student) -> None: ...

class CourseRepositoryInterface(Protocol):
    async def get(self, id: int) -> Optional[models.Course]: ...
    async def get_with_students(self, id: int) -> Optional[models.Course]: ...
    async def get_by_title(self, title: str) -> Optional[models.Course]: ...
    async def list(self) -> List[models.Course]: ...
    async def add(self, course: models.Course) -> models.Course: ...
    async def remove(self, course: models.Course) -> None: ...